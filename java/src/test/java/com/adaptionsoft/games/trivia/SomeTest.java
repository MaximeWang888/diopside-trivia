package com.adaptionsoft.games.trivia;import com.adaptionsoft.games.uglytrivia.Game;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import static org.junit.jupiter.api.Assertions.assertEquals;import java.io.ByteArrayOutputStream;import java.io.File;import java.io.IOException;import java.io.PrintStream;import java.nio.file.Files;import java.util.Random;public class SomeTest {    private final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();    @BeforeEach    public void setUp() {        System.setOut(new PrintStream(outputStream));    }    @Test    public void testGameRunnerOutput() throws IOException {        Random fixedRandom = new Random(12345);        GameRunnerMainRunner(fixedRandom);        File expectedOutputFile = new File("src/test/resources/expectedOutput.txt");        String expectedOutput = Files.readString(expectedOutputFile.toPath());        String actualOutput = normalizeLineSeparators(outputStream.toString());        String normalizedExpectedOutput = normalizeLineSeparators(expectedOutput);        assertEquals(normalizedExpectedOutput.trim(), actualOutput.trim());    }    private void GameRunnerMainRunner(Random random) {        Game aGame = new Game();        aGame.add("Chet");        aGame.add("Pat");        aGame.add("Sue");        boolean notAWinner;        do {            aGame.roll(random.nextInt(5) + 1);            if (random.nextInt(9) == 7) {                notAWinner = aGame.wrongAnswer();            } else {                notAWinner = aGame.wasCorrectlyAnswered();            }        } while (notAWinner);    }    private String normalizeLineSeparators(String input) {        return input.replace("\r\n", "\n").replace("\r", "\n");    }}